name: Smart Contract Testing & Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Compile contracts
        run: npx hardhat compile

      - name: Run tests
        run: npx hardhat test
        env:
          REPORT_GAS: true

      - name: Run coverage
        run: npx hardhat coverage
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Upload coverage reports
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: smart-contracts
          name: codecov-umbrella
          fail_ci_if_error: true

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run Slither
        uses: crytic/slither-action@v0.1.1
        continue-on-error: true
        id: slither
        with:
          node-version: 16
          sarif: results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.slither.outputs.sarif }}

      - name: Run Mythril
        uses: ConsenSys/mythril-action@v1
        with:
          mode: quick

  deploy-testnet:
    needs: [test, security]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to testnet
        run: npx hardhat run scripts/deploy.ts --network goerli
        env:
          PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }}
          INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}

      - name: Verify contracts
        run: npx hardhat verify --network goerli
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }} 