name: Security Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Compile contracts
        run: npx hardhat compile

      - name: Run tests
        run: npx hardhat test

      - name: Generate coverage report
        run: npx hardhat coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

  security-analysis:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Slither
        run: |
          python -m pip install --upgrade pip
          pip install slither-analyzer

      - name: Run Slither
        run: slither . --json slither-report.json
        continue-on-error: true

      - name: Install Mythril
        run: |
          pip install mythril

      - name: Run Mythril
        run: |
          myth analyze contracts/*.sol --execution-timeout 300 --max-depth 10 --solc solc-0.8.19
        continue-on-error: true

  deploy-testnet:
    needs: [test, security-analysis]
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: npm ci

      - name: Create env file
        run: |
          echo "PRIVATE_KEY=${{ secrets.DEPLOY_PRIVATE_KEY }}" >> .env
          echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env

      - name: Deploy to Goerli
        run: npx hardhat run scripts/deploy.ts --network goerli

      - name: Verify contracts
        run: npx hardhat verify --network goerli

  deploy-mainnet:
    needs: [test, security-analysis]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: npm ci

      - name: Create env file
        run: |
          echo "PRIVATE_KEY=${{ secrets.MAINNET_PRIVATE_KEY }}" >> .env
          echo "INFURA_API_KEY=${{ secrets.INFURA_API_KEY }}" >> .env
          echo "ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}" >> .env

      - name: Deploy to Mainnet
        run: |
          npx hardhat run scripts/deploy.ts --network mainnet

      - name: Verify contracts
        run: npx hardhat verify --network mainnet
